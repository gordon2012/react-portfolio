import React, { Component } from 'react';
import { withStyles } from '@material-ui/core/styles';
import withRoot from '../withRoot';
import Section from '../components/Section';

// import Card from '@material-ui/core/Card';
// import CardActions from '@material-ui/core/CardActions';
// import CardContent from '@material-ui/core/CardContent';
// import CardMedia from '@material-ui/core/CardMedia';
// import Button from '@material-ui/core/Button';
// import Typography from '@material-ui/core/Typography';
// import Grid from '@material-ui/core/Grid';

import GridList from '@material-ui/core/GridList';
import GridListTile from '@material-ui/core/GridListTile';
import GridListTileBar from '@material-ui/core/GridListTileBar';
// import ListSubheader from '@material-ui/core/ListSubheader';
// import IconButton from '@material-ui/core/IconButton';
// import InfoIcon from '@material-ui/icons/Info';

import Wrap from '../components/Wrap';

const styles = {
  root: {
    padding: '1em'
  },
  rb: {
    border: '3px solid red'
  },
  card: {
    // maxWidth: 345
  },
  media: {
    height: 0,
    paddingTop: '56.25%' // 16:9
  },

  gridList: {
    // width: 500,
    // height: 450
  },
  icon: {
    color: 'rgba(255, 255, 255, 0.54)'
  }
};

class Portfolio extends Component {
  state = {
    projects: [
      {
        title: 'Wikipedia Viewer',
        url: 'http://wikiviewer.gordondoskas.com',
        image: 'wikiviewer.png',
        repo: 'https://github.com/gordon2012/wikiviewer',
        copy: [
          'An implementation of Wikipedia search that uses its search API. Users can search Wikipedia entries in a search box and see the resulting Wikipedia entries and click a button to see a random Wikipedia entry.',
          'Technologies used: React, Redux, Sass, Webpack, Wikipedia API.'
        ]
      },
      {
        title: 'Camper Leaderboard',
        url: 'http://leaderboard.gordondoskas.com',
        image: 'leaderboard.png',
        repo: 'https://github.com/gordon2012/leaderboard',
        copy: [
          "A ranking of the top active FreeCodeCamp users. Users can see a table of the Free Code Camp campers who've earned the most brownie points in the past 30 days or in total.",
          'Technologies used: React, Bootstrap, Sass, JQuery, Webpack.'
        ]
      },
      {
        title: 'Markdown Previewer',
        url: 'http://markdown.gordondoskas.com',
        image: 'markdown.png',
        repo: 'https://github.com/gordon2012/markdown',
        copy: [
          'A live, styled markdown editor. As a user types markdown into the text box on the left, the output area on the right is styled appropriately in real time.',
          'Technologies used: React, Marked, Webpack.'
        ]
      },
      {
        title: 'Calculator',
        url: 'http://calculator.gordondoskas.com',
        image: 'calculator.png',
        repo: 'https://github.com/gordon2012/calculator',
        copy: [
          'A Javascript powered calculator. Users can add, subtract, multiply and divide two numbers, and clear the input field with a clear button. They can keep chaining mathematical operations together until the equal button is pressed, and the calculator will display the correct output.',
          'Technologies used: Bootstrap, JQuery, Gulp.'
        ]
      },
      {
        title: 'Random Quote Machine',
        url: 'http://quote.gordondoskas.com',
        image: 'quote.png',
        repo: 'https://github.com/gordon2012/quote',
        copy: [
          'An app that retrieves quotes generated by the forismatic API. Users can click a button to be shown a new random quote and press a button to tweet out a quote.',
          'Technologies used: React, Redux, Sass, Webpack, forismatic.com API.'
        ]
      },
      {
        title: 'Twitch.tv Status',
        url: 'http://twitch.gordondoskas.com',
        image: 'twitch.png',
        repo: 'https://github.com/gordon2012/twitch',
        copy: [
          'A monitor of Twitch.tv streamers. Users can see whether various channels are currently streaming on Twitch.tv, click the status output to be sent directly to that channel, see additional details about what a Twitch user is currently streaming, and see a placeholder notification if a streamer has closed their Twitch account (or the account never existed).',
          'Technologies used: React, Redux, Sass, Mocha, Chai, Webpack.'
        ]
      },
      {
        title: 'Roll A Ball',
        url: 'http://roll-a-ball.gordondoskas.com',
        image: 'roll-a-ball.png',
        repo: 'https://github.com/gordon2012/roll-a-ball',
        copy: [
          'A simple demo, the player controls a ball in a third person view and is able to collect spinning cubes. The play area is confined by four walls.',
          'Technologies used: Unity 3D'
        ]
      },
      {
        title: 'Space Shooter',
        url: 'http://space-shooter.gordondoskas.com',
        image: 'space-shooter.png',
        repo: 'https://github.com/gordon2012/space-shooter',
        copy: [
          'A simple demo, the player controls a space ship in a top down vertically scrolling area of space. Enemy ships and asteroids appear in waves and are able to be dodged or fired at.',
          'Technologies used: Unity 3D'
        ]
      },
      {
        title: 'Pixel Art Maker',
        url: 'http://pixel-art-maker.gordondoskas.com',
        image: 'pixel-art-maker.png',
        repo: 'https://github.com/gordon2012/udacity-pixel-art-maker',
        copy: [
          'A simple pixel based image editor, a user can change the grid size, select a color, and draw on the canvas.',
          'Technologies used: HTML, CSS, JavaScript'
        ]
      },
      {
        title: 'PURLs',
        url:
          'https://leadmanager.saltcreekmedia.com/templates/welcomeExample/5abe9e5f103fb41c7c647ca7',
        image: 'purls.png',
        repo: false,
        copy: [
          'PURLs, or Personalized URLs, are marketing landing pages used in conjunction with direct mail to identify and collect information from potential leads.',
          'At Salt Creek Media, we have a host of ready made templates that our clients choose from, many of which I have created. We also create custom pages for them, and I have created many of those as well.',
          'Technologies used: CakePHP, CSS, Bootstrap, JQuery'
        ]
      }
    ]
  };

  render() {
    const { classes } = this.props;

    return (
      <Section name="portfolio" grid={{ xs: 12, sm: 12, md: 10, lg: 8 }}>
        <h2>My Portfolio</h2>
        <div className={classes.root}>
          <GridList cellHeight={180} spacing={24} className={classes.gridList}>
            {this.state.projects.map(tile => (
              <GridListTile key={tile.title}>
                <img src={`/img/${tile.image}`} alt={tile.title} />
                <a href="#" className={classes.rb}>
                  <GridListTileBar title={tile.title} />
                </a>
              </GridListTile>
            ))}
          </GridList>
        </div>
      </Section>
    );
  }
}

export default withRoot(withStyles(styles)(Portfolio));
